//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MicroNet.IOC {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MicroNet.IOC.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 A brief descrption of the requested service is: 的本地化字符串。
        /// </summary>
        internal static string BriefDescriptionOfTheRequestedServiceIs {
            get {
                return ResourceManager.GetString("BriefDescriptionOfTheRequestedServiceIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Can not find a qualified constructor for the dynamic type {0}! 的本地化字符串。
        /// </summary>
        internal static string CanNotFoundQualifiedConstructorForDynamicType {
            get {
                return ResourceManager.GetString("CanNotFoundQualifiedConstructorForDynamicType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Can not get a valid assembly file name! 的本地化字符串。
        /// </summary>
        internal static string CanNotGetValidAssemblyFileName {
            get {
                return ResourceManager.GetString("CanNotGetValidAssemblyFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Cyclic dependency found while building an instance for type {0}! 的本地化字符串。
        /// </summary>
        internal static string CyclicDependencyFoundWhileBuildingInstanceForType {
            get {
                return ResourceManager.GetString("CyclicDependencyFoundWhileBuildingInstanceForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The declaring type of the provided constructor is not an Exception, nor does it derive from Exception! 的本地化字符串。
        /// </summary>
        internal static string DeclaringTypeIsNotExceptionOrDerivedFromException {
            get {
                return ResourceManager.GetString("DeclaringTypeIsNotExceptionOrDerivedFromException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 When registering an instance, the lifetime can only be {0} or one of the type that derive from it, while the provided type is {1}! 的本地化字符串。
        /// </summary>
        internal static string InstanceCanOnlyBeRegisteredInSingletonLifetime {
            get {
                return ResourceManager.GetString("InstanceCanOnlyBeRegisteredInSingletonLifetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Invalid assembly file name:  的本地化字符串。
        /// </summary>
        internal static string InvalidAssemblyFileName {
            get {
                return ResourceManager.GetString("InvalidAssemblyFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Invalid directory path:  的本地化字符串。
        /// </summary>
        internal static string InvalidDirectoryPath {
            get {
                return ResourceManager.GetString("InvalidDirectoryPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Invalid file name:  的本地化字符串。
        /// </summary>
        internal static string InvalidFileName {
            get {
                return ResourceManager.GetString("InvalidFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The [{0}th] parameter provided for the selected constructor of the type [{1}] is of type [{2}], which is not autowirable and must be explicitly specified! 的本地化字符串。
        /// </summary>
        internal static string NonautowirableParameterNotSpecified {
            get {
                return ResourceManager.GetString("NonautowirableParameterNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 No object registrations found for the contract type {0}! 的本地化字符串。
        /// </summary>
        internal static string NoObjectRegistrationsFoundForContractType {
            get {
                return ResourceManager.GetString("NoObjectRegistrationsFoundForContractType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 An ObjectBuilder registered with type {0} can not be found! 的本地化字符串。
        /// </summary>
        internal static string ObjectBuilderRegisteredWithTypeCanNotBeFound {
            get {
                return ResourceManager.GetString("ObjectBuilderRegisteredWithTypeCanNotBeFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The [{0}] can not be null! 的本地化字符串。
        /// </summary>
        internal static string ObjectCanNotBeNull {
            get {
                return ResourceManager.GetString("ObjectCanNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 A parameter of type {0} is not autowirable, which can not be determined by the container automatically, and should be explicitly provided with a value! 的本地化字符串。
        /// </summary>
        internal static string ParameterIsNotAutowirableAndShouldExplicitlyProvideAValue {
            get {
                return ResourceManager.GetString("ParameterIsNotAutowirableAndShouldExplicitlyProvideAValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The number of parameters provided for the selected constructor of the type [{0}] exceeds what is needed! The maximum acceptable number of parameters is [{1}], while the provided number is [{2}]! 的本地化字符串。
        /// </summary>
        internal static string ParameterNumberExceeds {
            get {
                return ResourceManager.GetString("ParameterNumberExceeds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The number of parameters passed to build a object instance is wrong! The constructor needs {0} parameter(s), while {1} parameter(s) was provided! 的本地化字符串。
        /// </summary>
        internal static string ParameterNumberIsWrong {
            get {
                return ResourceManager.GetString("ParameterNumberIsWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 No parameters is needed for the selected constructor of type [{0}], while there were parameters provided! 的本地化字符串。
        /// </summary>
        internal static string RedundantParametersProvided {
            get {
                return ResourceManager.GetString("RedundantParametersProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 One parameter of the selected constructor for type [{0}] is of [{1}], this parameter is not autowirable and needs to explicitly specify a value, while no value has been provided for it at the time of registration! 的本地化字符串。
        /// </summary>
        internal static string RequiredParameterNotProvided {
            get {
                return ResourceManager.GetString("RequiredParameterNotProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The [{0}] can not be null or empty! 的本地化字符串。
        /// </summary>
        internal static string StringCanNotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("StringCanNotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The supplied type [{0}] is not assignable from the open generic type {1}. 的本地化字符串。
        /// </summary>
        internal static string SuppliedTypeIsNotAssignableFromOpenGenericType {
            get {
                return ResourceManager.GetString("SuppliedTypeIsNotAssignableFromOpenGenericType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The supplied type [{0}] is not assignable from type {1}. 的本地化字符串。
        /// </summary>
        internal static string SuppliedTypeIsNotAssignableFromType {
            get {
                return ResourceManager.GetString("SuppliedTypeIsNotAssignableFromType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The supplied type [{0}] is not a autowirable type. An autowirable type is a reference type and can not be System.Type or System.String! 的本地化字符串。
        /// </summary>
        internal static string SuppliedTypeIsNotAutowirable {
            get {
                return ResourceManager.GetString("SuppliedTypeIsNotAutowirable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The supplied type [{0}] is not a concrete type! 的本地化字符串。
        /// </summary>
        internal static string SuppliedTypeIsNotConcreteType {
            get {
                return ResourceManager.GetString("SuppliedTypeIsNotConcreteType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The supplied type [{0}] is not an open generic type! 的本地化字符串。
        /// </summary>
        internal static string SuppliedTypeIsNotOpenGeneric {
            get {
                return ResourceManager.GetString("SuppliedTypeIsNotOpenGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The supplied type [{0}] is not a public type! 的本地化字符串。
        /// </summary>
        internal static string SuppliedTypeIsNotPublicType {
            get {
                return ResourceManager.GetString("SuppliedTypeIsNotPublicType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The supplied type [{0}] is an open generic type. 的本地化字符串。
        /// </summary>
        internal static string SuppliedTypeIsOpenGeneric {
            get {
                return ResourceManager.GetString("SuppliedTypeIsOpenGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The supplied type [{0}] is supposed to have one generic argument only! 的本地化字符串。
        /// </summary>
        internal static string SuppliedTypeSupposedToHaveOneGenericArgsOnly {
            get {
                return ResourceManager.GetString("SuppliedTypeSupposedToHaveOneGenericArgsOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The call path is: 的本地化字符串。
        /// </summary>
        internal static string TheCallPathIs {
            get {
                return ResourceManager.GetString("TheCallPathIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Use [LoadThis] method instead if you want to load [this]! 的本地化字符串。
        /// </summary>
        internal static string UseLoadThisMethodInstead {
            get {
                return ResourceManager.GetString("UseLoadThisMethodInstead", resourceCulture);
            }
        }
    }
}
