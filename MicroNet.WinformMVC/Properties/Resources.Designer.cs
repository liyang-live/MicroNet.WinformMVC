//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace  MicroNet.WinformMVC.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager(" MicroNet.WinformMVC.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 An error occured while executing the action [{0}], check the underlying implementation : TECHNICAL_DETAIL [{1}] . 的本地化字符串。
        /// </summary>
        internal static string ActionExecutionException {
            get {
                return ResourceManager.GetString("ActionExecutionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 You should specified the forwarded controller. 的本地化字符串。
        /// </summary>
        internal static string ActionRequiredException {
            get {
                return ResourceManager.GetString("ActionRequiredException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 You should at least provide a controller type or a view name. 的本地化字符串。
        /// </summary>
        internal static string ArgumentMissingException {
            get {
                return ResourceManager.GetString("ArgumentMissingException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The Argument should not be null 的本地化字符串。
        /// </summary>
        internal static string ArgumentNullException {
            get {
                return ResourceManager.GetString("ArgumentNullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The controller [{0}] is not configured. Check the controller manager configurations. 的本地化字符串。
        /// </summary>
        internal static string ControllerMissingException {
            get {
                return ResourceManager.GetString("ControllerMissingException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The controller {0} does not inherit from IController 的本地化字符串。
        /// </summary>
        internal static string IncorrectControllerTypeException {
            get {
                return ResourceManager.GetString("IncorrectControllerTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The type &apos;{0}&apos; does not inherit from Exception. 的本地化字符串。
        /// </summary>
        internal static string IncorrectExceptionTypeException {
            get {
                return ResourceManager.GetString("IncorrectExceptionTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The session is already initialized 的本地化字符串。
        /// </summary>
        internal static string InitializedSessionException {
            get {
                return ResourceManager.GetString("InitializedSessionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The key {0} doesn&apos;t exist 的本地化字符串。
        /// </summary>
        internal static string KeyMissingException {
            get {
                return ResourceManager.GetString("KeyMissingException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The method should be implemented 的本地化字符串。
        /// </summary>
        internal static string NotImplementedMethodException {
            get {
                return ResourceManager.GetString("NotImplementedMethodException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The view [{0}] is not configured. Check the controller manager configurations. 的本地化字符串。
        /// </summary>
        internal static string ViewMissingException {
            get {
                return ResourceManager.GetString("ViewMissingException", resourceCulture);
            }
        }
    }
}
